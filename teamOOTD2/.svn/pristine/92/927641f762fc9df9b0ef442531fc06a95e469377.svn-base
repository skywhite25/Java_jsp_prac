package com.OOTD.util.db;

public class DBSQL {

	public static final String FASHION_LIKE
	=" INSERT INTO FASHION_LIKE (NO,ID) VALUES (?,?)";
	
	
	public static final String TIME_LIKE
	=" INSERT INTO TIME_LIKE (NO,ID) VALUES (?,?) ";
	
	public static final String FASHION_VIEW
	=" SELECT NO,ID,(SELECT COUNT(*) FROM FASHION_LIKE FL WHERE (FL.NO = F.NO)AND(FL.ID=M.ID)) "  
			+ " CNT FROM FASHION F, MEMBER M WHERE (NO = ? AND ID = ?)";
	
	public static final String TIME_VIEW
	=" SELECT NO,ID,(SELECT COUNT(*) FROM TIME_LIKE FL WHERE (TL.NO = T.NO)AND(TL.ID=M.ID)) "
			+ " CNT FROM TIMELINE T, MEMBER M WHERE (NO = ? AND ID = ?)";
	
	public static final String FASHION_DELETE
	=" DELETE FROM FASHION_LIKE WHERE NO=? ";
	
	public static final String TIME_DELETE
	=" DELETE FROM TIME_LIKE WHERE NO =? ";
	
	

	// 로그인 처리
	public static final String MEMBER_LOGIN
	= " select m.id, m.name, m.gradeNo, g.gradeName from member m, grade g "
	+ " where (m.id = ? and m.pw = ?) and (m.gradeNo = g.gradeNo) ";
	// 회원리스트 - id, name, gender, birth, tel, status, gradeNo, gradeName
	public static final String MEMBER_LIST 
	= "select rnum, id, name, gender,"
	+ " to_char(birth, 'yyyy.mm.dd') birth, tel, status, gradeNo, gradeName from( "
		+ " select rownum rnum, id, name, gender, birth, tel, status,"
		+ " gradeNo, gradeName from ("
			+ " select m.id, m.name, m.gender, m.birth, m.tel, m.status,"
			+ " m.gradeNo, g.gradeName"
			+ " from member m, grade g "
			+ " where m.gradeNo = g.gradeNo "
			+ " order by id "
		+ " ) "
	+ ") where rnum between ? and ?  ";
	// 회원 정보 보기
	public static final String MEMBER_VIEW
	= "select m.id, m.name, m.gender, "
			+ " to_char(m.birth, 'yyyy.mm.dd') birth, m.tel, m.email, "
			+ " to_char(m.regDate,'yyyy.mm.dd') regDate, m.status, m.gradeNo, g.gradeName "
			+ " from member m, grade g where (m.id = ?) and (m.gradeNo = g.gradeNo)";
	// 회원 가입
	public static final String MEMBER_WRITE
	= " insert into member(id, pw, name, alias, gender, birth, tel, email) " + 
			" VALUES(?, ?, ?, ?, ?, ?, ?, ?) ";
	// 아이디 중복 체크
	public static final String MEMBER_CHECK_ID
	= "select id from member where id = ?";
	
	// 타임라인 리스트 - 번호, 제목, 작성자이름(작성자ID), 작성일, 파일명
	public static final String TIMELINE_LIST 
	= "select rnum, no, title, nickname, id, "
	+ " to_char(writeDate, 'yyyy.mm.dd') writeDate, fileName "
	+ " from( "
		+ " select rownum rnum, no, title, nickname, id, writeDate, fileName from ("
			+ " select t.no, t.title, t.nickname, m.id, t.writeDate, t.fileName "
			+ " from timeline t, member m "
			+ " where t.id = m.id "
			+ " order by no desc "
		+ " ) "
	+ ") where rnum between ? and ?  ";
	// 1-1. 전체 데이터 갯수 - 페이지 처리 : 리스트
	public static final String TIMELINE_GET_TOTALROW
	= " select count(*) from timeline ";
	// 2. 이미지 보기 - 번호, 제목, 내용, 이름, 아이디, 작성일, 파일명
	public static final String TIMELINE_VIEW
	= " select t.no, t.title, t.content, t.nickname, m.id, "
			+ " to_char(t.writeDate, 'yyyy.dd.mm') writeDate, t.fileName "
			+ " from timeline t, member m "
			+ " where (no = ?) and (i.id = m.id) ";  
	// 3. 이미지 등록 - 번호, 제목, 내용, 작성자ID, 파일명
	public static final String TIMELINE_WRITE 
	= " insert into timeline(no, title, content, id, fileName) "
	+ " values(timeline_seq.nextval, ?, ?, ?, ?) ";
	// 4-1. 이미지 파일 정보 수정 - 파일 바꾸기
	public static final String TIMELINE_UPDATE_FILE 
	= " update timeline set fileName = ? where no = ? ";
	// 5. 이미지 게시판 삭제
	public static final String TIMELINE_DELETE 
	= " delete from timeline where no = ? ";
}
